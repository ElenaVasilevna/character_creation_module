"""
В модуле character_creation_module нужно выделить три класса персонажей:
Warrior (воин), Mage (маг) и Healer (целитель).

Персонажи этих классов должны уметь: атаковать, защищаться и
применять специальный навык, который доступен только им.
Умения у всех персонажей одинаковые, но работают они по-разному.
Чтобы эту логику перенести в классы, для каждого класса нужно определить
методы атаки, защиты и специального умения.

Создать базовый класс Character. Объявить в этом классе общие методы и
свойства. Он должен содержать общие атрибуты для всех дочерних классов (name).

Функция attack() должна отвечать за генерацию очков урона,
нанесённого противнику. Принимает на вход имя и класс персонажа.

Функция defence() должна возвращать строку сообщения о блокированном персонажем
уроне в зависимости от его класса.

Функция special() должна возвращать название умения и значение очков урона,
которое наносит это умение.

Классы Warrior, Mage и Healer будут наследниками класса Character.
"""


class Character:
    """Базовый класс Персонаж"""
    def __init__(self, name):
        self.name = name

    def attack(self):
        """Функция атаки"""
        ...

    def defence(self):
        """Функция защиты"""
        ...

    def special(self):
        """Функция специального умения"""
        ...


class Warrior(Character):
    """Дочерний класс Воин"""
    def __init__(self):
        ...


class Mage(Character):
    """Дочерний класс Маг"""
    def __init__(self):
        ...


class Healer(Character):
    """Дочерний класс Целитель"""
    def __init__(self):
        ...
